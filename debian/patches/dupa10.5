From 9277f1c5a3df0ba129280444998eb2dc2bebe497 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?=D0=BD=D0=B0=D0=B1?= <nabijaczleweli@gmail.com>
Date: Thu, 21 May 2020 22:21:06 +0200
Subject: dupa10.5: move into always-arch.m4

---
 config/always-arch.m4   | 29 +++++++++++++++++++++++++++++
 config/time_t-format.m4 | 27 ---------------------------
 config/user.m4          |  2 --
 config/zfs-build.m4     |  1 +
 zfs_config.h.in         |  3 ---
 5 files changed, 30 insertions(+), 32 deletions(-)
 delete mode 100644 config/time_t-format.m4

diff --git a/config/always-arch.m4 b/config/always-arch.m4
index c3e6b4a9..a9ddb806 100644
--- a/config/always-arch.m4
+++ b/config/always-arch.m4
@@ -20,3 +20,32 @@ AC_DEFUN([ZFS_AC_CONFIG_ALWAYS_ARCH], [
 	AM_CONDITIONAL([TARGET_ASM_GENERIC], test $TARGET_ASM_DIR = asm-generic)
 	AC_MSG_RESULT([$TARGET_ASM_DIR])
 ])
+
+# time_t-format-string.m4
+dnl Copyright (C) 2002-2020 Free Software Foundation, Inc.
+dnl This file is free software; the Free Software Foundation
+dnl gives unlimited permission to copy and/or distribute it,
+dnl with or without modifications, as long as this notice is preserved.
+
+dnl From nabijaczleweli.
+
+dnl Sets the TIME_T_FORMAT variable to the modifiers
+dnl to %d or %u required to C-style format a time_t from time.h.
+dnl
+dnl This means "l"  if sizeof(time_t) == sizeof(long),
+dnl        and "ll" if sizeof(time_t) == sizeof(long long).
+dnl In practice, these are the only viable types,
+dnl so the second check can be omitted entirely.
+AC_DEFUN([ZFS_AC_GUESS_TIME_T_FORMAT],
+[
+  AC_COMPILE_IFELSE(
+    [AC_LANG_SOURCE(
+      [[#include <time.h>
+        typedef char sizeof_time_t_eq_sizeof_long[(sizeof(time_t) == sizeof(long)) ? 1 : -1];
+      ]])],
+    [time_t_format="l"],
+    [time_t_format="ll"])
+
+  AC_DEFINE(TIME_T_FORMAT, "$time_t_format",
+    ["l" if sizeof(time_t) == sizeof(long) or "ll" if sizeof(time_t) == sizeof(long long)])
+])
diff --git a/config/time_t-format.m4 b/config/time_t-format.m4
deleted file mode 100644
index 9434d95f..00000000
--- a/config/time_t-format.m4
+++ /dev/null
@@ -1,27 +0,0 @@
-# time_t-format-string.m4
-dnl Copyright (C) 2002-2020 Free Software Foundation, Inc.
-dnl This file is free software; the Free Software Foundation
-dnl gives unlimited permission to copy and/or distribute it,
-dnl with or without modifications, as long as this notice is preserved.
-
-dnl From nabijaczleweli.
-
-dnl Sets the TIME_T_FORMAT variable to the modifiers
-dnl to %d or %u required to C-style format a time_t from time.h.
-dnl
-dnl This means "l"  if sizeof(time_t) == sizeof(long),
-dnl        and "ll" if sizeof(time_t) == sizeof(long long).
-dnl In practice, these are the only viable types,
-dnl so the second check can be omitted entirely.
-AC_DEFUN([GUESS_TIME_T_FORMAT],
-[
-  AC_COMPILE_IFELSE(
-    [AC_LANG_SOURCE(
-      [[#include <time.h>
-        typedef char sizeof_time_t_eq_sizeof_long[(sizeof(time_t) == sizeof(long)) ? 1 : -1];
-      ]])],
-    [TIME_T_FORMAT="l"],
-    [TIME_T_FORMAT="ll"])
-
-  AC_SUBST([TIME_T_FORMAT])
-])
diff --git a/config/user.m4 b/config/user.m4
index bd680eca..5b5da092 100644
--- a/config/user.m4
+++ b/config/user.m4
@@ -23,8 +23,6 @@ AC_DEFUN([ZFS_AC_CONFIG_USER], [
 
 	ZFS_AC_TEST_FRAMEWORK
 
-	GUESS_TIME_T_FORMAT
-
 	AC_CHECK_FUNCS([mlockall strlcat strlcpy])
 ])
 
diff --git a/config/zfs-build.m4 b/config/zfs-build.m4
index 92aa6030..f9cf0ad6 100644
--- a/config/zfs-build.m4
+++ b/config/zfs-build.m4
@@ -161,6 +161,7 @@ AC_DEFUN([ZFS_AC_CONFIG_ALWAYS], [
 	ZFS_AC_CONFIG_ALWAYS_CC_ASAN
 	ZFS_AC_CONFIG_ALWAYS_TOOLCHAIN_SIMD
 	ZFS_AC_CONFIG_ALWAYS_ARCH
+	ZFS_AC_GUESS_TIME_T_FORMAT
 	ZFS_AC_CONFIG_ALWAYS_PYTHON
 	ZFS_AC_CONFIG_ALWAYS_PYZFS
 ])
diff --git a/zfs_config.h.in b/zfs_config.h.in
index f02871e0..22884b4e 100644
--- a/zfs_config.h.in
+++ b/zfs_config.h.in
@@ -791,9 +791,6 @@
 /* __posix_acl_chmod() exists */
 #undef HAVE___POSIX_ACL_CHMOD
 
-/* "l" if sizeof(time_t) == sizeof(long) or "ll" if sizeof(time_t) == sizeof(long long) */
-#undef TIME_T_FORMAT
-
 /* Define as const if the declaration of iconv() needs const. */
 #undef ICONV_CONST
 
-- 
2.27.0.rc0

